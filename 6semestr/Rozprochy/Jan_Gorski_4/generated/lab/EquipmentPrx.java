// **********************************************************************
//
// Copyright (c) 2003-2016 ZeroC, Inc. All rights reserved.
//
// This copy of Ice is licensed to you under the terms described in the
// ICE_LICENSE file included in this distribution.
//
// **********************************************************************
//
// Ice version 3.6.3
//
// <auto-generated>
//
// Generated from file `lab.ice'
//
// Warning: do not edit this file.
//
// </auto-generated>
//

package lab;

public interface EquipmentPrx extends Ice.ObjectPrx
{
    public int use();

    public int use(java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_use();

    public Ice.AsyncResult begin_use(java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_use(Ice.Callback __cb);

    public Ice.AsyncResult begin_use(java.util.Map<String, String> __ctx, Ice.Callback __cb);

    public Ice.AsyncResult begin_use(Callback_Equipment_use __cb);

    public Ice.AsyncResult begin_use(java.util.Map<String, String> __ctx, Callback_Equipment_use __cb);

    public Ice.AsyncResult begin_use(IceInternal.Functional_IntCallback __responseCb, 
                                     IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb);

    public Ice.AsyncResult begin_use(IceInternal.Functional_IntCallback __responseCb, 
                                     IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                     IceInternal.Functional_BoolCallback __sentCb);

    public Ice.AsyncResult begin_use(java.util.Map<String, String> __ctx, 
                                     IceInternal.Functional_IntCallback __responseCb, 
                                     IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb);

    public Ice.AsyncResult begin_use(java.util.Map<String, String> __ctx, 
                                     IceInternal.Functional_IntCallback __responseCb, 
                                     IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                     IceInternal.Functional_BoolCallback __sentCb);

    public int end_use(Ice.AsyncResult __result);

    public int stopuse();

    public int stopuse(java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_stopuse();

    public Ice.AsyncResult begin_stopuse(java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_stopuse(Ice.Callback __cb);

    public Ice.AsyncResult begin_stopuse(java.util.Map<String, String> __ctx, Ice.Callback __cb);

    public Ice.AsyncResult begin_stopuse(Callback_Equipment_stopuse __cb);

    public Ice.AsyncResult begin_stopuse(java.util.Map<String, String> __ctx, Callback_Equipment_stopuse __cb);

    public Ice.AsyncResult begin_stopuse(IceInternal.Functional_IntCallback __responseCb, 
                                         IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb);

    public Ice.AsyncResult begin_stopuse(IceInternal.Functional_IntCallback __responseCb, 
                                         IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                         IceInternal.Functional_BoolCallback __sentCb);

    public Ice.AsyncResult begin_stopuse(java.util.Map<String, String> __ctx, 
                                         IceInternal.Functional_IntCallback __responseCb, 
                                         IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb);

    public Ice.AsyncResult begin_stopuse(java.util.Map<String, String> __ctx, 
                                         IceInternal.Functional_IntCallback __responseCb, 
                                         IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                         IceInternal.Functional_BoolCallback __sentCb);

    public int end_stopuse(Ice.AsyncResult __result);

    public void addClient(Ice.Identity ident);

    public void addClient(Ice.Identity ident, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_addClient(Ice.Identity ident);

    public Ice.AsyncResult begin_addClient(Ice.Identity ident, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_addClient(Ice.Identity ident, Ice.Callback __cb);

    public Ice.AsyncResult begin_addClient(Ice.Identity ident, java.util.Map<String, String> __ctx, Ice.Callback __cb);

    public Ice.AsyncResult begin_addClient(Ice.Identity ident, Callback_Equipment_addClient __cb);

    public Ice.AsyncResult begin_addClient(Ice.Identity ident, java.util.Map<String, String> __ctx, Callback_Equipment_addClient __cb);

    public Ice.AsyncResult begin_addClient(Ice.Identity ident, 
                                           IceInternal.Functional_VoidCallback __responseCb, 
                                           IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb);

    public Ice.AsyncResult begin_addClient(Ice.Identity ident, 
                                           IceInternal.Functional_VoidCallback __responseCb, 
                                           IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                           IceInternal.Functional_BoolCallback __sentCb);

    public Ice.AsyncResult begin_addClient(Ice.Identity ident, 
                                           java.util.Map<String, String> __ctx, 
                                           IceInternal.Functional_VoidCallback __responseCb, 
                                           IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb);

    public Ice.AsyncResult begin_addClient(Ice.Identity ident, 
                                           java.util.Map<String, String> __ctx, 
                                           IceInternal.Functional_VoidCallback __responseCb, 
                                           IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                           IceInternal.Functional_BoolCallback __sentCb);

    public void end_addClient(Ice.AsyncResult __result);

    public void removeClient(Ice.Identity ident);

    public void removeClient(Ice.Identity ident, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_removeClient(Ice.Identity ident);

    public Ice.AsyncResult begin_removeClient(Ice.Identity ident, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_removeClient(Ice.Identity ident, Ice.Callback __cb);

    public Ice.AsyncResult begin_removeClient(Ice.Identity ident, java.util.Map<String, String> __ctx, Ice.Callback __cb);

    public Ice.AsyncResult begin_removeClient(Ice.Identity ident, Callback_Equipment_removeClient __cb);

    public Ice.AsyncResult begin_removeClient(Ice.Identity ident, java.util.Map<String, String> __ctx, Callback_Equipment_removeClient __cb);

    public Ice.AsyncResult begin_removeClient(Ice.Identity ident, 
                                              IceInternal.Functional_VoidCallback __responseCb, 
                                              IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb);

    public Ice.AsyncResult begin_removeClient(Ice.Identity ident, 
                                              IceInternal.Functional_VoidCallback __responseCb, 
                                              IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                              IceInternal.Functional_BoolCallback __sentCb);

    public Ice.AsyncResult begin_removeClient(Ice.Identity ident, 
                                              java.util.Map<String, String> __ctx, 
                                              IceInternal.Functional_VoidCallback __responseCb, 
                                              IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb);

    public Ice.AsyncResult begin_removeClient(Ice.Identity ident, 
                                              java.util.Map<String, String> __ctx, 
                                              IceInternal.Functional_VoidCallback __responseCb, 
                                              IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                              IceInternal.Functional_BoolCallback __sentCb);

    public void end_removeClient(Ice.AsyncResult __result);
}
