
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = '140B498384159E6E410D0D41F0E2969C'
    
_lr_action_items = {'RETURN':([0,2,4,5,6,8,9,11,13,14,15,16,17,18,19,20,21,24,27,29,30,44,45,46,50,51,52,54,76,80,81,83,90,124,125,126,127,128,129,136,137,138,139,140,142,144,145,146,147,],[-3,-69,10,-69,-2,-5,-10,-14,-16,-17,-19,-15,10,10,-13,-12,-20,-18,-11,-3,-68,-9,10,10,-34,-33,10,-4,-32,-22,-21,-23,10,-24,10,10,10,10,-35,-31,-25,-27,-29,-30,-70,10,10,-26,-28,]),'WHILE':([0,2,4,5,6,8,9,11,13,14,15,16,17,18,19,20,21,24,27,29,30,44,45,46,50,51,52,54,76,80,81,83,90,124,125,126,127,128,129,136,137,138,139,140,142,144,145,146,147,],[-3,-69,25,-69,-2,-5,-10,-14,-16,-17,-19,-15,25,25,-13,-12,-20,-18,-11,-3,-68,-9,25,25,-34,-33,25,-4,-32,-22,-21,-23,25,-24,25,25,25,25,-35,-31,-25,-27,-29,-30,-70,25,25,-26,-28,]),'PRINT':([0,2,4,5,6,8,9,11,13,14,15,16,17,18,19,20,21,24,27,29,30,44,45,46,50,51,52,54,76,80,81,83,90,124,125,126,127,128,129,136,137,138,139,140,142,144,145,146,147,],[-3,-69,12,-69,-2,-5,-10,-14,-16,-17,-19,-15,12,12,-13,-12,-20,-18,-11,-3,-68,-9,12,12,-34,-33,12,-4,-32,-22,-21,-23,12,-24,12,12,12,12,-35,-31,-25,-27,-29,-30,-70,12,12,-26,-28,]),'NEQ':([35,36,37,38,39,41,43,60,84,87,98,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,134,135,143,],[-40,-37,-39,-41,-38,77,77,77,77,77,77,77,-61,-60,77,-53,None,77,None,-52,-42,-44,-43,-45,77,None,None,None,-46,None,77,77,-62,-63,77,]),'LE':([35,36,37,38,39,41,43,60,84,87,98,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,134,135,143,],[-40,-37,-39,-41,-38,63,63,63,63,63,63,63,-61,-60,63,-53,None,63,None,-52,-42,-44,-43,-45,63,None,None,None,-46,None,63,63,-62,-63,63,]),'%':([35,36,37,38,39,41,43,60,84,87,98,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,134,135,143,],[-40,-37,-39,-41,-38,75,75,75,75,75,75,75,-61,-60,75,75,75,75,75,75,75,-44,75,-45,75,75,75,75,-46,75,75,75,-62,-63,75,]),'&':([35,36,37,38,39,41,43,60,84,87,98,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,134,135,143,],[-40,-37,-39,-41,-38,64,64,64,64,64,64,64,-61,-60,64,-53,-58,-48,-57,-52,-42,-44,-43,-45,64,-54,-56,-59,-46,-55,64,64,-62,-63,64,]),')':([35,36,37,38,39,56,58,59,60,85,86,87,88,89,94,95,96,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,132,134,135,141,143,],[-40,-37,-39,-41,-38,-72,-65,103,104,125,126,-36,127,128,-71,131,-74,-64,134,135,-67,-61,-60,-50,-53,-58,-48,-57,-52,-42,-44,-43,-45,-51,-54,-56,-59,-46,-55,-47,-49,-75,-62,-63,-73,-66,]),'(':([10,12,23,25,34,38,40,47,48,49,53,57,58,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,77,78,79,82,133,],[40,40,48,49,56,58,40,40,40,40,56,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,]),'+':([35,36,37,38,39,41,43,60,84,87,98,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,134,135,143,],[-40,-37,-39,-41,-38,67,67,67,67,67,67,67,-61,-60,67,67,67,67,67,67,-42,-44,-43,-45,67,67,67,67,-46,67,67,67,-62,-63,67,]),'*':([35,36,37,38,39,41,43,60,84,87,98,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,134,135,143,],[-40,-37,-39,-41,-38,68,68,68,68,68,68,68,-61,-60,68,68,68,68,68,68,68,-44,68,-45,68,68,68,68,-46,68,68,68,-62,-63,68,]),'-':([35,36,37,38,39,41,43,60,84,87,98,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,134,135,143,],[-40,-37,-39,-41,-38,69,69,69,69,69,69,69,-61,-60,69,69,69,69,69,69,-42,-44,-43,-45,69,69,69,69,-46,69,69,69,-62,-63,69,]),',':([32,33,35,36,37,38,39,92,94,96,98,99,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,132,134,135,141,143,],[-7,55,-40,-37,-39,-41,-38,-6,130,-74,-8,133,-67,-61,-60,-50,-53,-58,-48,-57,-52,-42,-44,-43,-45,-51,-54,-56,-59,-46,-55,-47,-49,-75,-62,-63,-73,-66,]),'/':([35,36,37,38,39,41,43,60,84,87,98,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,134,135,143,],[-40,-37,-39,-41,-38,70,70,70,70,70,70,70,-61,-60,70,70,70,70,70,70,70,-44,70,-45,70,70,70,70,-46,70,70,70,-62,-63,70,]),'ID':([0,2,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,24,27,29,30,31,40,44,45,46,47,48,49,50,51,52,54,55,57,58,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,90,91,97,124,125,126,127,128,129,133,136,137,138,139,140,142,144,145,146,147,],[-3,-69,22,-69,-2,34,-5,-10,38,-14,38,-16,-17,-19,-15,22,22,-13,-12,-20,-18,-11,-3,-68,53,38,-9,22,22,38,38,38,-34,-33,22,-4,93,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,-32,38,38,38,-22,-21,38,-23,22,93,132,-24,22,22,22,22,-35,38,-31,-25,-27,-29,-30,-70,22,22,-26,-28,]),'INTEGER':([10,12,40,47,48,49,57,58,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,77,78,79,82,133,],[36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,]),';':([3,26,28,32,33,35,36,37,38,39,41,42,43,84,87,92,98,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,134,135,],[8,50,51,-7,54,-40,-37,-39,-41,-38,76,80,81,124,-36,-6,-8,-61,-60,-50,-53,-58,-48,-57,-52,-42,-44,-43,-45,-51,-54,-56,-59,-46,-55,-47,-49,136,-62,-63,]),':':([22,],[46,]),'=':([22,34,93,],[47,57,57,]),'<':([35,36,37,38,39,41,43,60,84,87,98,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,134,135,143,],[-40,-37,-39,-41,-38,65,65,65,65,65,65,65,-61,-60,65,-53,None,65,None,-52,-42,-44,-43,-45,65,None,None,None,-46,None,65,65,-62,-63,65,]),'$end':([1,9,11,13,14,15,16,17,19,20,21,24,27,44,50,51,76,80,81,83,124,129,136,137,138,139,140,146,147,],[0,-10,-14,-16,-17,-19,-15,-1,-13,-12,-20,-18,-11,-9,-34,-33,-32,-22,-21,-23,-24,-35,-31,-25,-27,-29,-30,-26,-28,]),'SHR':([35,36,37,38,39,41,43,60,84,87,98,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,134,135,143,],[-40,-37,-39,-41,-38,62,62,62,62,62,62,62,-61,-60,62,-53,62,62,62,-52,-42,-44,-43,-45,62,62,62,62,-46,62,62,62,-62,-63,62,]),'REPEAT':([0,2,4,5,6,8,9,11,13,14,15,16,17,18,19,20,21,24,27,29,30,44,45,46,50,51,52,54,76,80,81,83,90,124,125,126,127,128,129,136,137,138,139,140,142,144,145,146,147,],[-3,-69,18,-69,-2,-5,-10,-14,-16,-17,-19,-15,18,18,-13,-12,-20,-18,-11,-3,-68,-9,18,18,-34,-33,18,-4,-32,-22,-21,-23,18,-24,18,18,18,18,-35,-31,-25,-27,-29,-30,-70,18,18,-26,-28,]),'STRING':([10,12,40,47,48,49,57,58,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,77,78,79,82,133,],[37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,]),'ELSE':([11,13,14,15,16,19,20,21,24,27,50,51,76,80,81,83,124,129,136,137,138,139,140,146,147,],[-14,-16,-17,-19,-15,-13,-12,-20,-18,-11,-34,-33,-32,-22,-21,-23,-24,-35,-31,144,145,-29,-30,-26,-28,]),'GE':([35,36,37,38,39,41,43,60,84,87,98,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,134,135,143,],[-40,-37,-39,-41,-38,74,74,74,74,74,74,74,-61,-60,74,-53,None,74,None,-52,-42,-44,-43,-45,74,None,None,None,-46,None,74,74,-62,-63,74,]),'EQ':([35,36,37,38,39,41,43,60,84,87,98,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,134,135,143,],[-40,-37,-39,-41,-38,72,72,72,72,72,72,72,-61,-60,72,-53,None,72,None,-52,-42,-44,-43,-45,72,None,None,None,-46,None,72,72,-62,-63,72,]),'UNTIL':([9,11,13,14,15,16,19,20,21,24,27,44,45,50,51,76,80,81,83,124,129,136,137,138,139,140,146,147,],[-10,-14,-16,-17,-19,-15,-13,-12,-20,-18,-11,-9,82,-34,-33,-32,-22,-21,-23,-24,-35,-31,-25,-27,-29,-30,-26,-28,]),'IF':([0,2,4,5,6,8,9,11,13,14,15,16,17,18,19,20,21,24,27,29,30,44,45,46,50,51,52,54,76,80,81,83,90,124,125,126,127,128,129,136,137,138,139,140,142,144,145,146,147,],[-3,-69,23,-69,-2,-5,-10,-14,-16,-17,-19,-15,23,23,-13,-12,-20,-18,-11,-3,-68,-9,23,23,-34,-33,23,-4,-32,-22,-21,-23,23,-24,23,23,23,23,-35,-31,-25,-27,-29,-30,-70,23,23,-26,-28,]),'AND':([35,36,37,38,39,41,43,60,84,87,98,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,134,135,143,],[-40,-37,-39,-41,-38,61,61,61,61,61,61,61,-61,-60,-50,-53,-58,-48,-57,-52,-42,-44,-43,-45,61,-54,-56,-59,-46,-55,-47,-49,-62,-63,61,]),'SHL':([35,36,37,38,39,41,43,60,84,87,98,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,134,135,143,],[-40,-37,-39,-41,-38,66,66,66,66,66,66,66,-61,-60,66,-53,66,66,66,-52,-42,-44,-43,-45,66,66,66,66,-46,66,66,66,-62,-63,66,]),'TYPE':([0,2,5,6,8,29,52,54,56,129,130,142,],[-3,7,31,-2,-5,-3,91,-4,97,-35,97,-70,]),'FLOAT':([10,12,40,47,48,49,57,58,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,77,78,79,82,133,],[39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,]),'^':([35,36,37,38,39,41,43,60,84,87,98,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,134,135,143,],[-40,-37,-39,-41,-38,79,79,79,79,79,79,79,-61,-60,79,-53,-58,-48,-57,-52,-42,-44,-43,-45,79,-54,-56,-59,-46,-55,79,-49,-62,-63,79,]),'|':([35,36,37,38,39,41,43,60,84,87,98,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,134,135,143,],[-40,-37,-39,-41,-38,78,78,78,78,78,78,78,-61,-60,78,-53,-58,-48,-57,-52,-42,-44,-43,-45,78,-54,-56,-59,-46,-55,-47,-49,-62,-63,78,]),'BREAK':([0,2,4,5,6,8,9,11,13,14,15,16,17,18,19,20,21,24,27,29,30,44,45,46,50,51,52,54,76,80,81,83,90,124,125,126,127,128,129,136,137,138,139,140,142,144,145,146,147,],[-3,-69,26,-69,-2,-5,-10,-14,-16,-17,-19,-15,26,26,-13,-12,-20,-18,-11,-3,-68,-9,26,26,-34,-33,26,-4,-32,-22,-21,-23,26,-24,26,26,26,26,-35,-31,-25,-27,-29,-30,-70,26,26,-26,-28,]),'CONTINUE':([0,2,4,5,6,8,9,11,13,14,15,16,17,18,19,20,21,24,27,29,30,44,45,46,50,51,52,54,76,80,81,83,90,124,125,126,127,128,129,136,137,138,139,140,142,144,145,146,147,],[-3,-69,28,-69,-2,-5,-10,-14,-16,-17,-19,-15,28,28,-13,-12,-20,-18,-11,-3,-68,-9,28,28,-34,-33,28,-4,-32,-22,-21,-23,28,-24,28,28,28,28,-35,-31,-25,-27,-29,-30,-70,28,28,-26,-28,]),'error':([0,2,6,8,12,29,40,48,49,52,54,58,],[-3,3,-2,-5,42,-3,59,86,89,3,-4,101,]),'{':([0,2,4,5,6,8,9,11,13,14,15,16,17,18,19,20,21,24,27,29,30,44,45,46,50,51,52,54,76,80,81,83,90,124,125,126,127,128,129,131,136,137,138,139,140,142,144,145,146,147,],[-3,-69,29,-69,-2,-5,-10,-14,-16,-17,-19,-15,29,29,-13,-12,-20,-18,-11,-3,-68,-9,29,29,-34,-33,29,-4,-32,-22,-21,-23,29,-24,29,29,29,29,-35,29,-31,-25,-27,-29,-30,-70,29,29,-26,-28,]),'>':([35,36,37,38,39,41,43,60,84,87,98,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,134,135,143,],[-40,-37,-39,-41,-38,73,73,73,73,73,73,73,-61,-60,73,-53,None,73,None,-52,-42,-44,-43,-45,73,None,None,None,-46,None,73,73,-62,-63,73,]),'}':([9,11,13,14,15,16,19,20,21,24,27,44,50,51,76,80,81,83,90,124,129,136,137,138,139,140,146,147,],[-10,-14,-16,-17,-19,-15,-13,-12,-20,-18,-11,-9,-34,-33,-32,-22,-21,-23,129,-24,-35,-31,-25,-27,-29,-30,-26,-28,]),'OR':([35,36,37,38,39,41,43,60,84,87,98,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,134,135,143,],[-40,-37,-39,-41,-38,71,71,71,71,71,71,71,-61,-60,-50,-53,-58,-48,-57,-52,-42,-44,-43,-45,-51,-54,-56,-59,-46,-55,-47,-49,-62,-63,71,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'declarations':([0,29,],[2,52,]),'expr_list':([58,],[99,]),'choice_instr':([4,17,18,45,46,52,90,125,126,127,128,144,145,],[11,11,11,11,11,11,11,11,11,11,11,11,11,]),'arg':([56,130,],[96,141,]),'repeat_instr':([4,17,18,45,46,52,90,125,126,127,128,144,145,],[13,13,13,13,13,13,13,13,13,13,13,13,13,]),'return_instr':([4,17,18,45,46,52,90,125,126,127,128,144,145,],[14,14,14,14,14,14,14,14,14,14,14,14,14,]),'const':([10,12,40,47,48,49,57,58,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,77,78,79,82,133,],[35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,]),'continue_instr':([4,17,18,45,46,52,90,125,126,127,128,144,145,],[15,15,15,15,15,15,15,15,15,15,15,15,15,]),'while_instr':([4,17,18,45,46,52,90,125,126,127,128,144,145,],[16,16,16,16,16,16,16,16,16,16,16,16,16,]),'init':([7,55,91,],[32,92,32,]),'program':([0,],[1,]),'assignment':([4,17,18,45,46,52,90,125,126,127,128,144,145,],[19,19,19,19,19,19,19,19,19,19,19,19,19,]),'fundefs':([2,5,],[4,30,]),'labeled_instr':([4,17,18,45,46,52,90,125,126,127,128,144,145,],[20,20,20,20,20,20,20,20,20,20,20,20,20,]),'compound_instr':([4,17,18,45,46,52,90,125,126,127,128,131,144,145,],[21,21,21,21,21,21,21,21,21,21,21,142,21,21,]),'inits':([7,91,],[33,33,]),'declaration':([2,52,],[6,6,]),'args_list':([56,],[94,]),'condition':([48,49,82,],[85,88,123,]),'instructions':([4,18,52,],[17,45,90,]),'expr_list_or_empty':([58,],[100,]),'break_instr':([4,17,18,45,46,52,90,125,126,127,128,144,145,],[24,24,24,24,24,24,24,24,24,24,24,24,24,]),'instruction':([4,17,18,45,46,52,90,125,126,127,128,144,145,],[9,44,9,44,83,9,44,137,138,139,140,146,147,]),'args_list_or_empty':([56,],[95,]),'fundef':([2,5,],[5,5,]),'print_instr':([4,17,18,45,46,52,90,125,126,127,128,144,145,],[27,27,27,27,27,27,27,27,27,27,27,27,27,]),'expression':([10,12,40,47,48,49,57,58,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,77,78,79,82,133,],[41,43,60,84,87,87,98,102,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,87,143,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> declarations fundefs instructions','program',3,'p_program','Cparser.py',38),
  ('declarations -> declarations declaration','declarations',2,'p_declarations','Cparser.py',42),
  ('declarations -> <empty>','declarations',0,'p_declarations','Cparser.py',43),
  ('declaration -> TYPE inits ;','declaration',3,'p_declaration','Cparser.py',50),
  ('declaration -> error ;','declaration',2,'p_declaration','Cparser.py',51),
  ('inits -> inits , init','inits',3,'p_inits','Cparser.py',58),
  ('inits -> init','inits',1,'p_inits','Cparser.py',59),
  ('init -> ID = expression','init',3,'p_init','Cparser.py',66),
  ('instructions -> instructions instruction','instructions',2,'p_instructions','Cparser.py',70),
  ('instructions -> instruction','instructions',1,'p_instructions','Cparser.py',71),
  ('instruction -> print_instr','instruction',1,'p_instruction','Cparser.py',78),
  ('instruction -> labeled_instr','instruction',1,'p_instruction','Cparser.py',79),
  ('instruction -> assignment','instruction',1,'p_instruction','Cparser.py',80),
  ('instruction -> choice_instr','instruction',1,'p_instruction','Cparser.py',81),
  ('instruction -> while_instr','instruction',1,'p_instruction','Cparser.py',82),
  ('instruction -> repeat_instr','instruction',1,'p_instruction','Cparser.py',83),
  ('instruction -> return_instr','instruction',1,'p_instruction','Cparser.py',84),
  ('instruction -> break_instr','instruction',1,'p_instruction','Cparser.py',85),
  ('instruction -> continue_instr','instruction',1,'p_instruction','Cparser.py',86),
  ('instruction -> compound_instr','instruction',1,'p_instruction','Cparser.py',87),
  ('print_instr -> PRINT expression ;','print_instr',3,'p_print_instr','Cparser.py',91),
  ('print_instr -> PRINT error ;','print_instr',3,'p_print_instr','Cparser.py',92),
  ('labeled_instr -> ID : instruction','labeled_instr',3,'p_labeled_instr','Cparser.py',96),
  ('assignment -> ID = expression ;','assignment',4,'p_assignment','Cparser.py',100),
  ('choice_instr -> IF ( condition ) instruction','choice_instr',5,'p_choice_instr','Cparser.py',104),
  ('choice_instr -> IF ( condition ) instruction ELSE instruction','choice_instr',7,'p_choice_instr','Cparser.py',105),
  ('choice_instr -> IF ( error ) instruction','choice_instr',5,'p_choice_instr','Cparser.py',106),
  ('choice_instr -> IF ( error ) instruction ELSE instruction','choice_instr',7,'p_choice_instr','Cparser.py',107),
  ('while_instr -> WHILE ( condition ) instruction','while_instr',5,'p_while_instr','Cparser.py',115),
  ('while_instr -> WHILE ( error ) instruction','while_instr',5,'p_while_instr','Cparser.py',116),
  ('repeat_instr -> REPEAT instructions UNTIL condition ;','repeat_instr',5,'p_repeat_instr','Cparser.py',120),
  ('return_instr -> RETURN expression ;','return_instr',3,'p_return_instr','Cparser.py',124),
  ('continue_instr -> CONTINUE ;','continue_instr',2,'p_continue_instr','Cparser.py',128),
  ('break_instr -> BREAK ;','break_instr',2,'p_break_instr','Cparser.py',132),
  ('compound_instr -> { declarations instructions }','compound_instr',4,'p_compound_instr','Cparser.py',136),
  ('condition -> expression','condition',1,'p_condition','Cparser.py',140),
  ('const -> INTEGER','const',1,'p_const','Cparser.py',145),
  ('const -> FLOAT','const',1,'p_const','Cparser.py',146),
  ('const -> STRING','const',1,'p_const','Cparser.py',147),
  ('expression -> const','expression',1,'p_expression','Cparser.py',157),
  ('expression -> ID','expression',1,'p_expression','Cparser.py',158),
  ('expression -> expression + expression','expression',3,'p_expression','Cparser.py',159),
  ('expression -> expression - expression','expression',3,'p_expression','Cparser.py',160),
  ('expression -> expression * expression','expression',3,'p_expression','Cparser.py',161),
  ('expression -> expression / expression','expression',3,'p_expression','Cparser.py',162),
  ('expression -> expression % expression','expression',3,'p_expression','Cparser.py',163),
  ('expression -> expression | expression','expression',3,'p_expression','Cparser.py',164),
  ('expression -> expression & expression','expression',3,'p_expression','Cparser.py',165),
  ('expression -> expression ^ expression','expression',3,'p_expression','Cparser.py',166),
  ('expression -> expression AND expression','expression',3,'p_expression','Cparser.py',167),
  ('expression -> expression OR expression','expression',3,'p_expression','Cparser.py',168),
  ('expression -> expression SHL expression','expression',3,'p_expression','Cparser.py',169),
  ('expression -> expression SHR expression','expression',3,'p_expression','Cparser.py',170),
  ('expression -> expression EQ expression','expression',3,'p_expression','Cparser.py',171),
  ('expression -> expression NEQ expression','expression',3,'p_expression','Cparser.py',172),
  ('expression -> expression > expression','expression',3,'p_expression','Cparser.py',173),
  ('expression -> expression < expression','expression',3,'p_expression','Cparser.py',174),
  ('expression -> expression LE expression','expression',3,'p_expression','Cparser.py',175),
  ('expression -> expression GE expression','expression',3,'p_expression','Cparser.py',176),
  ('expression -> ( expression )','expression',3,'p_expression','Cparser.py',177),
  ('expression -> ( error )','expression',3,'p_expression','Cparser.py',178),
  ('expression -> ID ( expr_list_or_empty )','expression',4,'p_expression','Cparser.py',179),
  ('expression -> ID ( error )','expression',4,'p_expression','Cparser.py',180),
  ('expr_list_or_empty -> expr_list','expr_list_or_empty',1,'p_expr_list_or_empty','Cparser.py',197),
  ('expr_list_or_empty -> <empty>','expr_list_or_empty',0,'p_expr_list_or_empty','Cparser.py',198),
  ('expr_list -> expr_list , expression','expr_list',3,'p_expr_list','Cparser.py',202),
  ('expr_list -> expression','expr_list',1,'p_expr_list','Cparser.py',203),
  ('fundefs -> fundef fundefs','fundefs',2,'p_fundefs','Cparser.py',212),
  ('fundefs -> <empty>','fundefs',0,'p_fundefs','Cparser.py',213),
  ('fundef -> TYPE ID ( args_list_or_empty ) compound_instr','fundef',6,'p_fundef','Cparser.py',220),
  ('args_list_or_empty -> args_list','args_list_or_empty',1,'p_args_list_or_empty','Cparser.py',224),
  ('args_list_or_empty -> <empty>','args_list_or_empty',0,'p_args_list_or_empty','Cparser.py',225),
  ('args_list -> args_list , arg','args_list',3,'p_args_list','Cparser.py',229),
  ('args_list -> arg','args_list',1,'p_args_list','Cparser.py',230),
  ('arg -> TYPE ID','arg',2,'p_arg','Cparser.py',239),
]
